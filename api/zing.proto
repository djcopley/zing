syntax = "proto3";

package zing;

import "api/user.proto";
import "api/message.proto";

option go_package = "github.com/djcopley/zing/api";

service Zing {
  // Login takes the username and password and returns a token for accessing messages
  rpc Login(LoginRequest) returns (LoginResponse);

  // Invalidates the user's tokens
  rpc Logout(LogoutRequest) returns (LogoutResponse);

  // Takes a user's id and streams back the messages currently in the server queue
  rpc ListMessages(ListMessagesRequest) returns (ListMessagesResponse);

  // Send a message to a user
  rpc SendMessage(SendMessageRequest) returns (SendMessageResponse);

  // Clear all messages for the authenticated user
  rpc ClearMessages(ClearMessagesRequest) returns (ClearMessagesResponse);
}

message LoginRequest {
  string username = 1;
  string password = 2;
}
message LoginResponse {
  string token = 1;
}

message LogoutRequest {}
message LogoutResponse {}

// GetMessageRequest sends the server the user's id and a token
message ListMessagesRequest {
  // The maximum number of messages to return. The service may return fewer than
  // this value.
  // If unspecified, at most 50 messages will be returned.
  // The maximum value is 1000; values above 1000 will be coerced to 1000.
  int32 page_size = 1;

  // A page token, received from a previous `ListMessages` call.
  // Provide this to retrieve the subsequent page.
  //
  // When paginating, all other parameters provided to `ListMessages` must match
  // the call that provided the page token.
  string page_token = 2;
}
message ListMessagesResponse {
  // The messages for the user.
  repeated Message messages = 1;

  // A token that can be sent as `page_token` to retrieve the next page.
  // If this field is omitted, there are no subsequent pages.
  string next_page_token = 2;
}

message SendMessageRequest {
  User to = 1;
  Message message = 2;
}
message SendMessageResponse {}

message ClearMessagesRequest {}
message ClearMessagesResponse {}
